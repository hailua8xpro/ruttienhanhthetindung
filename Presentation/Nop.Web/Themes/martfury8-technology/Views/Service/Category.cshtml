@model ServiceCategoryModel
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@inject CommonSettings commonSettings
@inject IThemeContext themeContext
@{
    Layout = "_ColumnsOne";
    var themeName = themeContext.WorkingThemeName;

    //title
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-service-category-page");
    Html.AppendCssFileParts($"~/Themes/{themeName}/Content/css/news.css");

    if (seoSettings.CanonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("NewsCategory", new { SeName = Model.SeName }, webHelper.CurrentRequestProtocol).ToLowerInvariant();
        Html.AddCanonicalUrlParts(categoryUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
    }

    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;
}
@section Breadcrumb
    {
    <div class="wrapper-breadcrums">
        <div class="container">
            <div class="breadcrumb">
                <ul itemscope itemtype="http://schema.org/BreadcrumbList">
                    <li>
                        <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                        <span class="delimiter">@breadcrumbDelimiter</span>
                    </li>
                    <li>
                        <a href="@Url.RouteUrl("ServiceArchive")" title="@T("Service")">@T("Service")</a>
                        <span class="delimiter">@breadcrumbDelimiter</span>
                    </li>
                    <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                        <strong class="current-item" itemprop="name">@Model.Name</strong>
                        <span itemprop="item" itemscope itemtype="http://schema.org/Thing">
                            <link itemprop="url" href="@Url.RouteUrl("ServiceCategoty", new { SeName = Model.SeName })" />
                        </span>
                    </li>
                </ul>
            </div>
        </div>
    </div>
}
<div class="container">
    <div class="page-title-wrapper"><h1 class="page-title" id="page-title-heading" aria-labelledby="page-title-heading toolbar-amount"><span class="base" data-ui-id="page-title-wrapper">@Model.Name</span></h1> </div>
    <div class="news-list-page">
        <div class="post-list-wrapper">
            <div class="row">
                @foreach (var item in Model.ServiceItemListModel.ServiceItems)
                {
                    <div class="col-6">
                        <div class="post-item">
                            <a class="news-title" href="@Url.RouteUrl("Service", new { SeName = item.SeName })"><img class="img-fluid lazy" data-src="@item.PictureModel.ImageUrl" alt="@item.Name" /></a>
                            <h2 class="title">
                                <a href="@Url.RouteUrl("Service", new { SeName = item.SeName })">@item.Name</a>
                            </h2>
                            <div class="post-posed-date">
                                <span class="value">@item.CreatedOn.ToString("D")</span>
                            </div>

                        </div>
                    </div>
                }
            </div>
            @{
                var pager = Html.Pager(Model.ServiceItemListModel.PagingFilteringContext).QueryParam("pagenumber");
            }
            @if (!pager.IsEmpty())
            {
                <div class="pager">
                    @pager
                </div>
            }
        </div>
    </div>
</div>
