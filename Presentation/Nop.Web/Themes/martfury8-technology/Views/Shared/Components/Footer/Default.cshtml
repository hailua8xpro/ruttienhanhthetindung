@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext;
<footer class="page-footer">
    <div class="footer-content">
        <div class="container">
            <div class="footer-main">
                <div class="row">
                    <div class="col-6 col-md-6">
                        <div class="footer-links-wrap">
                            <div class="h4 title">
                                @T("Footer.Information")
                            </div>
                            <div class="footer-container">
                                @await Component.InvokeAsync("TopicBlock", new { systemName = "ContactUs" })

                            </div>
                        </div>
                    </div>

                    <div class="col-6 col-md-3">
                        <div class="footer-links-wrap">
                            <div class="h4 title">
                                @T("Footer.Link")
                            </div>
                            <div class="footer-container">
                                <ul class="footer-links">
                                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                                    {
                                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                                    }
                                    @if (Model.DisplayContactUsFooterItem)
                                    {
                                        <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                                    }
                                    @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                                    {
                                        <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                                    }
                                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                                    {
                                        <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                                    }
                                </ul>

                            </div>
                        </div>
                    </div>

                    <div class="col-12 col-md-3">
                        <div class="footer-links-wrap">
                            <p>@T("Footer.FollowUs")</p>
                            @await Component.InvokeAsync("SocialButtons")
                        </div>
                    </div>
                </div>
            </div>
            <div class="footer-copyright-vertical">
                <div class="row align-items-center">
                    <div class="footer-copyright col-md-5 col-12">
                        <div class="text-copyright">
                            @*© @DateTime.Now.Year @Model.StoreName*@
                        </div>
                    </div>
                    <div class="footer-payment col-md-7 col-12 text-right">
                        <div class="mr-payment">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="footer-lower">
        <div class="footer-info">
            <span class="footer-disclaimer"></span>
            @if (Model.DisplayTaxShippingInfoFooter)
            {
                var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                <span class="footer-tax-shipping">
                    @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                </span>
            }
        </div>

        @await Component.InvokeAsync("StoreThemeSelector")
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
</footer>
<script asp-location="Footer">
    $(document).ready(function () {
        $('.footer-block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 769) {
                $(this).siblings('.list').slideToggle('slow');
            }
        });
    });
</script>
<script asp-location="Footer">
    $(document).ready(function () {
        $('.block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 1001) {
                $(this).siblings('.listbox').slideToggle('slow');
            }
        });
    });
</script>