@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject CatalogSettings catalogSettings
@inject IWorkContext workContext
@{
    //prepare "Add to cart" AJAX link
    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}
<div class="product-item" data-productid="@Model.Id">
    <div class="product-item-info">
        <div class="product-show">
            <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })">
                <img class="product-image-photo lazy" alt="@Model.DefaultPictureModel.AlternateText" data-src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
            </a>

            <div class="product-btn">
                <ul class="row no-gutters">
                    @if (!Model.ProductPrice.DisableBuyButton)
                    {
                        var addToCartText = T("ShoppingCart.AddToCart").Text;
                        if (Model.ProductPrice.IsRental)
                        {
                            addToCartText = T("ShoppingCart.Rent").Text;
                        }
                        if (Model.ProductPrice.AvailableForPreOrder)
                        {
                            addToCartText = T("ShoppingCart.PreOrder").Text;
                        }
                        <li class="col"><a href="javascript:" title="@addToCartText" data-toggle="tooltip" data-placement="top" onclick="$(this).addClass('disabled');AjaxCart.addproducttocart_catalog('@addtocartlink');return false;"><i class="mbi mbi-bag2"></i></a></li>
                    }

                    <li class="col quickview"><a href="javascript:" onclick="$(this).addClass('disabled');showQuickViewProduct('@Url.RouteUrl("QuickViewProduct", new {productId= Model.Id})')" title="@T("ProductItem.QuickView")" data-toggle="tooltip" data-placement="top"><i class="mbi mbi-eye"></i></a></li>
                    @if (!Model.ProductPrice.DisableWishlistButton)
                    {
                        <li class="col"><a title="@T("ShoppingCart.AddToWishlist")" data-toggle="tooltip" data-placement="top" href="javascript:" onclick="$(this).addClass('disabled');AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;"><i class="mbi mbi-heart"></i></a></li>

                    }
                    @if (!Model.ProductPrice.DisableAddToCompareListButton)
                    {
                        <li class="col"><a title="@T("ShoppingCart.AddToCompareList")" data-toggle="tooltip" data-placement="top" href="javascript:" onclick="$(this).addClass('disabled');AjaxCart.addproducttocomparelist('@addtocomparelink');return false;"><i class="mbi mbi-chart-bars"></i></a></li>
                    }

                </ul>
            </div>

        </div>
        <div class="product details product-item-details">
            <h3 class="product-item-name">
                <a class="block-with-text two-row" href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">@Model.Name</a>
            </h3>
            @if (Model.ReviewOverviewModel.AllowCustomerReviews)
            {
                var ratingPercent = 0;
                if (Model.ReviewOverviewModel.TotalReviews != 0)
                {
                    ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                }


                <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                    <div class="rating">
                        <span style="width: @(ratingPercent)%">
                        </span>
                    </div>
                </div>
                <div class="prices">
                    @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                    {
                        <span class="special-price">
                            @Model.ProductPrice.Price
                        </span>
                        <span class="old-price">@Model.ProductPrice.OldPrice</span>
                    }
                    else
                    {
                        <span class="normal-price">
                            @Model.ProductPrice.Price
                        </span>
                    }
                </div>
            }

        </div>

    </div>
</div>
