@model ProductDetailsModel
@using Microsoft.AspNetCore.Http.Extensions
@using Nop.Core.Domain.Seo;
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@inject IThemeContext themeContext

@{
    Layout = "_ColumnsOne";
    var themeName = themeContext.WorkingThemeName;

    //title
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-product-details-page");
    Html.AppendCssFileParts($"~/Themes/{themeName}/Content/css/detail.css");
    Html.AppendCssFileParts($"~/Themes/{themeName}/Content/css/productitem.css");


    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, webHelper.CurrentRequestProtocol).ToLowerInvariant();
        Html.AddCanonicalUrlParts(productUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + webHelper.GetThisPageUrl(true) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + webHelper.GetThisPageUrl(true) + "\" />");
    }
}
<!--product breadcrumb-->
@section Breadcrumb
    {
    @await Html.PartialAsync("_ProductBreadcrumb", Model.Breadcrumb)
}
<main id="maincontent">
    <form asp-route="Product" asp-route-sename="@Model.SeName" method="post" id="product-details-form">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="product-info-main-top">
                        <div class="row align-items-center">
                            <div class="col-12 col-lg-8">
                                <div class="page-title-wrapper product">
                                    <h1 class="page-title" itemprop="name">
                                        @Model.Name
                                    </h1>
                                </div>
                                <div class="clearfix">
                                    <div class="float-left">
                                        @await Html.PartialAsync("_ProductReviewOverview", Model.ProductReviewOverview)
                                    </div>
                                    <div class="float-left sku ml-3">
                                        @await Html.PartialAsync("_SKU_Man_GTIN_Ven", Model)
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-lg-4 text-md-right">
                                @await Html.PartialAsync("_ShareButton", Model)
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12 col-md-6 col-lg-5">
                                    @await Html.PartialAsync("_ProductDetailsPictures", Model)
                        </div>
                        <div class="col-12 col-md-6 col-lg-7 mt-3 mt-md-0">
                            <div class="product-info-price" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                                @{
                                    var dataDictPrice = new ViewDataDictionary(ViewData);
                                    dataDictPrice.TemplateInfo.HtmlFieldPrefix = $"price_{Model.Id}";
                                    @await Html.PartialAsync("_ProductPrice", Model.ProductPrice, dataDictPrice)

                                    @await Html.PartialAsync("_ProductTierPrices", Model.TierPrices)
                                    <!--availability-->
                                    @await Html.PartialAsync("_Availability", Model)
                                    <div class="product attribute overview">
                                        <div class="value" itemprop="description">
                                            @if (!string.IsNullOrEmpty(Model.ShortDescription))
                                            {
                                                @Html.Raw(Model.ShortDescription)
                                            }
                                        </div>
                                    </div>

                                }

                            </div>
                            <div class="product-add-form">
                                @{
                                    var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                    dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                }

                                <div class="clearfix">
                                    @await Html.PartialAsync("_AddToCart", Model.AddToCart, dataDictAddToCart)
                                    <div class="overview-buttons float-md-left">
                                        @{
                                            var dataDictAddToWishlist = new ViewDataDictionary(ViewData);
                                            dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                            @await Html.PartialAsync("_AddToWishlist", Model.AddToCart, dataDictAddToWishlist)
                                        }
                                        @await Html.PartialAsync("_CompareProductsButton", Model)
                                    </div>
                                </div>
                            </div>
                            <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                                <div class="product-essential">
                                    <!--product pictures-->
                                    <div class="overview">

                                        <!--manufacturers-->
                                        @await Html.PartialAsync("_ProductManufacturers", Model.ProductManufacturers)

                                        <!--SKU, MAN, GTIN, vendor-->
                                        <!--delivery-->
                                        @await Html.PartialAsync("_DeliveryInfo", Model)
                                        <!--sample download-->
                                        @await Html.PartialAsync("_DownloadSample", Model)
                                        <!--attributes-->
                                        @{
                                            var dataDictAttributes = new ViewDataDictionary(ViewData);
                                            dataDictAttributes.TemplateInfo.HtmlFieldPrefix = $"attributes_{Model.Id}";
                                            @await Html.PartialAsync("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
                                        }
                                        <!--gift card-->
                                        @{
                                            var dataDictGiftCard = new ViewDataDictionary(ViewData);
                                            dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = $"giftcard_{Model.Id}";
                                            @await Html.PartialAsync("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                                        }
                                        <!--rental info-->
                                        @{
                                            var dataDictRental = new ViewDataDictionary(ViewData);
                                            dataDictRental.TemplateInfo.HtmlFieldPrefix = $"rental_{Model.Id}";
                                            @await Html.PartialAsync("_RentalInfo", Model, dataDictRental)
                                        }


                                    </div>

                                </div>


                            </div>
                            @await Html.PartialAsync("_ProductTags", Model.ProductTags)

                        </div>
                    </div>
                </div>
            </div>
            <ul class="nav nav-tabs mt-5" id="productdetailinfotab" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">@T("productdetail_tab_product_info")</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">@T("productdetail_tab_product_specification")</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact" aria-selected="false">@T("productdetail_tab_product_reviews") </a>
                </li>
            </ul>
            <div class="tab-content py-4" id="productdetailinfotabcontent">
                <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    @if (!string.IsNullOrEmpty(Model.FullDescription))
                    {
                        <div class="full-description" itemprop="description">
                            @Html.Raw(Model.FullDescription)
                        </div>
                    }
                </div>
                <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                        @await Html.PartialAsync("_ProductSpecifications", Model.ProductSpecifications)
                </div>
                <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">...</div>
            </div>
            @await Component.InvokeAsync("ProductsAlsoPurchased", new { productId = Model.Id })
            @await Component.InvokeAsync("RelatedProducts", new { productId = Model.Id })
        </div>
    </form>
</main>
<script asp-location="Footer">
    $(document).ready(function () {
        if ($('.box-tocart .page-title').length>0) {
            $('.box-tocart .page-title').text($('.product-info-main-top .page-title').text());
        }
    })
    $(window).scroll(function () {
        var top = $('#productdetailinfotabcontent').position().top;
        if ($(document).scrollTop() > top) {
            $('.sticky-addcart').addClass('active');
            $('.box-tocart').addClass('container');
        }
        else {
            $('.sticky-addcart').removeClass('active');
            $('.box-tocart').removeClass('container');
        }
    })
</script>